name: Configure Branch Protection

on:
  push:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to protect (default=default branch)"
        required: false
  schedule:
    - cron: '15 2 * * 1'

jobs:
  protect:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Load required checks
        id: load
        run: |
          echo "checks=$(jq -cr '.checks' .github/required-status-checks.json)" >> $GITHUB_OUTPUT

      - name: Set branch protection (requires admin token)
        uses: actions/github-script@v7
        env:
          ADMIN_TOKEN: ${{ secrets.REPO_ADMIN_TOKEN }}
          CHECKS: ${{ steps.load.outputs.checks }}
        with:
          github-token: ${{ env.ADMIN_TOKEN }}
          script: |
            const branch = core.getInput('branch') || context.payload.repository.default_branch;
            const contexts = JSON.parse(process.env.CHECKS || '[]');
            if (!process.env.ADMIN_TOKEN) {
              core.setFailed('REPO_ADMIN_TOKEN secret missing; cannot set branch protection.');
              return;
            }
            await github.request('PUT /repos/{owner}/{repo}/branches/{branch}/protection', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch,
              required_status_checks: {
                strict: true,
                contexts
              },
              enforce_admins: true,
              required_pull_request_reviews: {
                required_approving_review_count: 1
              },
              restrictions: null
            });
            core.notice(`Branch protection updated on ${branch} with ${contexts.length} required checks.`);
