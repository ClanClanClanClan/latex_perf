[tool.poetry]
name = "latex-perfectionist"
version = "24.0.0"
description = "Formally verified LaTeX validation with 542+ rules"
authors = ["LaTeX Perfectionist Team <team@latex-perfectionist.org>"]
license = "MIT"
readme = "README.md"
homepage = "https://latex-perfectionist.org"
repository = "https://github.com/latex-perfectionist/latex-perfectionist"
documentation = "https://docs.latex-perfectionist.org"
keywords = ["latex", "linter", "formatter", "typography", "academic-writing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Markup :: LaTeX",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Scientific/Engineering",
]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.0"
regex = "^2023.0.0"
pylatexenc = "^2.10"
PyYAML = "^6.0"
toml = "^0.10.2"
rich = "^13.0.0"
requests = "^2.31.0"
watchdog = { version = "^3.0.0", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.0"
hypothesis = "^6.82.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.5.0"
bandit = "^1.7.5"
safety = "^2.3.5"
pre-commit = "^3.3.3"

[tool.poetry.group.test.dependencies]
pytest-watch = "^4.2.0"
pytest-benchmark = "^4.0.0"
pytest-timeout = "^2.1.0"
faker = "^19.3.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.1.0"
sphinx-rtd-theme = "^1.3.0"
sphinx-autodoc-typehints = "^1.24.0"
myst-parser = "^2.0.0"

[tool.poetry.extras]
watch = ["watchdog"]
all = ["watchdog"]

[tool.poetry.scripts]
latex-perfectionist = "latex_perfectionist.cli:main"
lp = "latex_perfectionist.cli:main"  # Short alias

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Tool configurations

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=latex_perfectionist",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py", "*_tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardcore: marks tests as hardcore/hell-level tests",
]

[tool.coverage.run]
branch = true
source = ["latex_perfectionist"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used test

[tool.latex-perfectionist]
# Default configuration for LaTeX Perfectionist itself
[tool.latex-perfectionist.document]
profile = "article"
language = ["en-GB"]
zero_warnings = true
deterministic = true

[tool.latex-perfectionist.severity]
error = ["*"]
warning = []
info = []

[tool.latex-perfectionist.math]
scriptstyle_depth = 2
kerning_metrics = true
mathml_required = true

[tool.latex-perfectionist.bibliography]
require_doi = true
verify_crossref = true
require_orcid = true